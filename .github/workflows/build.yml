name: Build, Package, and Deploy Lambda Function

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Native Image with Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app ghcr.io/graalvm/graalvm-ce:22.3.0 \
            bash -c "gu install native-image && apt-get update && apt-get install -y maven && mvn clean package -Pnative"

      - name: Extract the Native Image from Docker
        run: |
          # Supondo que o build produza o binário no diretório target
          cp target/lambda-graalvm-0.0.1-SNAPSHOT-native-image ./lambda-graalvm-native-image

      - name: Zip the function
        run: |
          cp lambda-graalvm-native-image bootstrap
          zip function.zip bootstrap

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: function-zip
          path: function.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name your-function-name --zip-file fileb://function.zip
